// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Contacts {
  id            Int             @id @default(autoincrement())
  fullName      String
  email         String
  mobile        String
  handle        String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  ContactGroups ContactGroups[]
}

model ContactGroups {
  id          Int      @id @default(autoincrement())
  contacts    Contacts @relation(fields: [contactId], references: [id])
  contactId   Int
  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Notifications {
  id                     Int                      @id @default(autoincrement())
  userId                 Int
  entity                 String
  entityId               Int
  type                   String
  status                 StatusTypes              @default(NEW)
  statusMessage          String                   @default("NEW")
  retryCount             Int                      @default(0)
  useSystemPreferences   Boolean                  @default(false)
  createdAt              DateTime                 @default(now())
  updatedAt              DateTime                 @updatedAt
  NotificationRecipients NotificationRecipients[]
  NotificationContent    NotificationContent[]
}

model NotificationRecipients {
  id             Int           @id @default(autoincrement())
  notifications  Notifications @relation(fields: [notificationId], references: [id])
  notificationId Int
  userId         Int
  fullName       String
  email          String
  mobile         String
  handle         String
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

model NotificationContent {
  id             Int           @id @default(autoincrement())
  notifications  Notifications @relation(fields: [notificationId], references: [id])
  notificationId Int
  contentType    ContentTypes  @default(HTML)
  content        String        @db.Text()
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

model Services {
  id            Int          @id @default(autoincrement())
  userId        Int
  type          ServiceTypes @default(SMS)
  provider      ProviderType  @default(INFOBIP)
  status        StatusTypes  @default(NEW)
  statusMessage String       @default("NEW")
  retryCount    Int          @default(0)
  jobId         String       @default("")
  jobStatus     JobStatus    @default(NEW)
  request       String       @db.Text
  response      String       @db.Text
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model Subscriptions {
  id                  Int                   @id @default(autoincrement())
  name                String
  description         String                @db.VarChar(255)
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  SubscriptionMembers SubscriptionMembers[]
}

model SubscriptionMembers {
  id             Int           @id @default(autoincrement())
  subscriptions  Subscriptions @relation(fields: [subscriptionId], references: [id])
  subscriptionId Int
  users          Users         @relation(fields: [userId], references: [id])
  userId         Int
  description    String        @db.VarChar(255)
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

model Users {
  id                  Int                   @id @default(autoincrement())
  email               String                @unique
  name                String
  surname             String
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  UserSecurity        UserSecurity?
  UserRole            UserRoles[]
  SubscriptionMembers SubscriptionMembers[]
}

model UserSecurity {
  id           Int      @id @default(autoincrement())
  password     String
  refreshToken String?  @unique
  user         Users    @relation(fields: [userId], references: [id])
  userId       Int      @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model UserRoles {
  id        Int      @id @default(autoincrement())
  role      String
  user      Users    @relation(fields: [userId], references: [id])
  userId    Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ContentTypes {
  HTML
  TEXT
}

enum JobStatus {
  FAILED
  NEW
  PROCESSING
  SUCCESS
}

enum ProviderType {
  ELMNTRY
  INFOBIP
}

enum ServiceTypes {
  EMAIL
  SMS
  WHATSAPP
}

enum StatusTypes {
  NEW
  PROCESSING
  COMPLETE
  FAILED
}
