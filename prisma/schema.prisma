// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Notifications {
  id                     Int                      @id @default(autoincrement())
  userId                 Int
  entity                 String
  entityId               Int
  type                   String
  status                 StatusTypes              @default(NEW)
  statusMessage          String                   @default("NEW")
  retryCount             Int                      @default(0)
  useSystemPreferences   Boolean                  @default(false)
  createdAt              DateTime                 @default(now())
  updatedAt              DateTime                 @updatedAt
  NotificationRecipients NotificationRecipients[]
  NotificationContent    NotificationContent[]
}

model NotificationRecipients {
  id             Int           @id @default(autoincrement())
  notifications  Notifications @relation(fields: [notificationId], references: [id])
  notificationId Int           @unique
  userId         Int
  fullName       String
  email          String
  mobile         String
  handle         String
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

model NotificationContent {
  id             Int           @id @default(autoincrement())
  notifications  Notifications @relation(fields: [notificationId], references: [id])
  notificationId Int           @unique
  contentType    ContentTypes  @default(HTML)
  content        String        @db.Text()
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  name         String
  surname      String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  UserSecurity UserSecurity?
  UserRole     UserRoles[]
}

model UserSecurity {
  id           Int      @id @default(autoincrement())
  password     String
  refreshToken String?  @unique
  user         User     @relation(fields: [userId], references: [id])
  userId       Int      @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model UserRoles {
  id        Int      @id @default(autoincrement())
  role      String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ContentTypes {
  HTML
  TEXT
}

enum StatusTypes {
  NEW
  PROCESSING
  COMPLETE
  FAILED
}
